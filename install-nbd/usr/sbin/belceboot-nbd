#!/bin/sh

nbd_test(){
	[ -f "$1" ] || return 1
	file "$1" |grep -i "squashfs" || return 1
}

nbd_mount(){
	TMP_MOUNT_DIR="$(mktemp -d)"
	mount -o loop,ro -t squashfs "$1" "$TMP_MOUNT_DIR" || return 1
	return 0
}

nbd_umount(){
	[ "$TMP_MOUNT_DIR" ] || return 1
	umount "$TMP_MOUNT_DIR" || true
}

nbd_list_kernel(){
	ls -1 $TMP_MOUNT_DIR/boot/vmlinuz-*
}

nbd_get_kernel(){
	if [ "$NBD_KVER" ] && [ -r "$TMP_MOUNT_DIR/boot/vmlinuz-$NBD_KVER" ] ; then
		readlink -f "$TMP_MOUNT_DIR/boot/vmlinuz-$NBD_KVER"
		return 0
	elif [ "$NBD_KERNEL" ] && [ -r "$NBD_KERNEL" ] ; then
		readlink -f "$NBD_KERNEL"
		return 0
	elif [ -L "$TMP_MOUNT_DIR/boot/vmlinuz" ] ; then
		readlinf -f "$TMP_MOUNT_DIR/boot/vmlinuz"
		return 0
	elif [ $(nbd_list_kernel |wc -l) -eq 1 ]; then
		readlink -f "$(nbd_list_kernel)"
		return 0
	fi
	return 1
}

nbd_list_initrd(){
	ls -1 $TMP_MOUNT_DIR/boot/initrd.img-*
}

nbd_initrd_from_kernel(){
	kFILE="$(readlink -f "$1")"
	INITRD_PATH="$(dirname "$KFILE")"
	INITRD_NAME="$(basename "$KFILE"|sed -e "s%vmlinuz%initrd.img%")"
	echo "$INITRD_PATH/$INITRD_NAME"
}

nbd_get_initrd(){
	if [ "$NBD_KVER" ] && [ -r "$TMP_MOUNT_DIR/boot/initrd.img-$NBD_KVER" ] ; then
		readlink -f "$TMP_MOUNT_DIR/boot/initrd.img-$NBD_KVER"
		return 0
	elif [ "$NBD_INITRD" ] && [ -r "$NBD_INITRD" ] ; then
		readlink -f "$NBD_INITRD"
		return 0
	elif [ "$NBD_KERNEL" ]  && [ -r "$(nbd_initrd_from_kernel "$NBD_KERNEL")" ] ; then
		"$(nbd_initrd_from_kernel "$NBD_KERNEL")"
		return 0
	elif [ -L "$TMP_MOUNT_DIR/boot/initrd.img" ] ; then
		readlinf -f "$TMP_MOUNT_DIR/boot/initrd.img"
		return 0
	elif [ $(nbd_list_initrd |wc -l) -eq 1 ] ; then
		nbd_list_initrd
		return 0
	fi
	return 1
}

nbd_name(){
	basename "$1" |tr "." "_"
}

nbd_bb_dir(){
	BBDIR="$BB_IMAGE_DIR/$(nbd_name "$1")"
	mkdir -p "$BBDIR"
	echo "$BBDIR"
}

nbd_export(){
	NBD_FILE="$(readlink -f "$1")"
	NBD_NAME="$(nbd_name "$1")"
	if [ ! -e "${NBD_CONF_DIR}/${NBD_NAME}.conf" ] || [ "$FORCE" ] ; then
		mkdir -p "${NBD_CONF_DIR}"
		cat << EOF > "${NBD_CONF_DIR}/${NBD_NAME}.conf"
[bb_${NBD_NAME}]
exportname = $NBD_FILE
readonly = true
EOF
	else
		bb_warn_msg "add: Skipping existent file ${NBD_CONF_DIR}/${NBD_NAME}.conf"
	fi

}

nbd_unexport(){
	rm -f "${NBD_CONF_DIR}/$(nbd_name "$1")"
}

nbd_configure(){
	: > /var/lib/belceboot-nbd/belceboot-nbd.log
	for d in ltsp nbd-server/conf.d ; do
		for f in $(ls -1 /usr/share/belceboot-nbd/config/$d) ; do
			echo "/etc/$d/$f" >> /var/lib/belceboot-nbd/belceboot-nbd.log
			if [ ! -e /etc/$d/$f ] || [ "$FORCE" ] ; then
				mkdir -p "/etc/$d"
				sed -e "s%_@_SWAPDIR_@_%$BB_SWAPDIR%g;s%_@_SWAPSIZE_@_%$BB_SWAPSIZE%g" /usr/share/belceboot-nbd/config/$d/$f > /etc/$d/$f
			else
				bb_warn_msg "configure: Skipping existent file /etc/$d/$f"
			fi
		done
	done
}

nbd_purge(){
	if [ -r /var/lib/belceboot-nbd/belceboot-nbd.log ] ; then
		grep -v "^[[:blank:]]*$" /var/lib/belceboot-nbd/belceboot-nbd.log |while read f ; do
			rm -f $f
		done
		rm -f /var/lib/belceboot-nbd/belceboot-nbd.log
	fi
}

nbd_add_image(){
	NBD_FILE="$(readlink -f "$1")"
	NBD_NAME="$(nbd_name "$1")"
	NBD_BBDIR="$(nbd_bb_dir "$1")"
	[ -z "$2" ] || NBD_KERNEL="$2"
	[ -z "$3" ] || NBD_INITRD="$3"
	rc=0
	nbd_test "$NBD_FILE" || usage
	nbd_mount "$NBD_FILE" || usage
	NEW_KERNEL="$(nbd_get_kernel)" || rc=$?
	if [ $rc -ne 0 ] ; then
		bb_warn_msg "Error: Unable to find kernel file, please specify it"
		bb_warn_msg "Available kernels in squashfs file are:"
		nbd_list_kernel
	else
		NBD_KERNEL="$NEW_KERNEL"
		NEW_INITRD="$(nbd_get_initrd)" || rc=$?
		if [ $rc -ne 0 ] ; then
			bb_warn_msg "Error: Unable to find initrd file, please specify it"
			bb_warn_msg "Available initrds in squashfs file are:"
			nbd_list_initrd
		else
			NBD_INITRD="$NEW_INITRD"
		fi
	fi
	if [ $rc -eq 0 ] ; then
		cp "$NBD_KERNEL" $NBD_BBDIR || usage
		cp "$NBD_INITRD" $NBD_BBDIR || usage
	fi
	nbd_umount "$NBD_FILE"
	[ $rc -eq 0 ] || return 1
	
	# generate BB_IMAGE_CFG BB_IMAGE_PX ...
	if [ ! -e "$NBD_BBDIR/$BB_IMAGE_CFG" ] || [ "$FORCE" ] ; then
		cat << EOF > "$NBD_BBDIR/$BB_IMAGE_CFG"
NBD_IMAGE="$NBD_FILE"
NBD_NAME="$NBD_NAME"
KERNEL="$NBD_NAME/$(basename "$NBD_KERNEL")"
INITRD="$NBD_NAME/$(basename "$NBD_INITRD")"
BOOT_DIR="$NBD_BBDIR"
EOF
	else
		bb_warn_msg "configure: Skipping existent file $NBD_BBDIR/$BB_IMAGE_CFG"
	fi
	if [ ! -e "$NBD_BBDIR/$BB_IMAGE_PXE" ] || [ "$FORCE" ] ; then
		cat << EOF > "$NBD_BBDIR/$BB_IMAGE_PXE"
[default]
    label \$NBD_NAME
        menu label \$NBD_NAME
        kernel \$KERNEL
        append ro initrd=\$INITRD root=/dev/nbd0 init=/sbin/init-ltsp quiet splash vga=792 xforcevesa vt.handoff=7 nbdroot=\$BB_NBDSERVER,bb_\$NBD_NAME
EOF
	else
		bb_warn_msg "configure: Skipping existent file $NBD_BBDIR/$BB_IMAGE_PXE"
	fi
}

usage(){
cat << EOF >&2
Usage: $(basename "$0") [options] add_image NBD_IMG_FILE [KERNEL_FILE [INITRD_FILE]]
       $(basename "$0") [options] {export|unexport|enable|disable} NBD_IMG_FILE
       $(basename "$0") [options] {configure|purge}

	Available options: --force, --kversion=VERSION
EOF
}

TMP_MOUNT_DIR=""
NBD_KERNEL=""
NBD_KVER=""
NBD_INITRD=""

while echo "$1" |grep -q "^--." ; do
	case "$1" in
		--force)
			FORCE="Y"
			;;
		--kversion=*)
			NBD_KVER=${1#--kversion=}
			;;
	esac
	shift
done

[ "$1" ] || usage

NBD_CONF_DIR="/etc/nbd-server/conf.d"
. /usr/share/belceboot/belceboot-common


bb_is_true "$BB_CONFIGURE_NBD" || NBD_CONF_DIR="${BB_DRY_DIR}${NBD_CONF_DIR}"
		
case "$1" in
	export)
		[ "$2" ] || usage
		nbd_export "$2"
		;;
	unexport)
		[ "$2" ] || usage
		nbd_unexport "$2"
		;;
	add-image)
		[ "$2" ] || usage
		nbd_add_image "$2" $3 $4
		bb_enable "$(nbd_bb_dir "$1")"
		;;
	enable)
		[ "$2" ] || usage
		bb_enable "$(nbd_bb_dir "$1")"
	disable)
		[ "$2" ] || usage
		bb_disable "$(nbd_bb_dir "$1")"
		;;
	configure)
		nbd_configure
		;;
	purge)
		nbd_purge
		;;
	*)
		usage
		;;
esac
exit 0

